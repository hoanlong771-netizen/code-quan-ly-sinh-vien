<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>